Looking at the RadioStationSelector.tsx file, here's how it would look with just one radio station (using Spandex Salvation Radio as the example):

import { useState } from "react";
import { ChevronDown, Radio } from "lucide-react";
import { Button } from "@/components/ui/button";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";
import { useTheme } from "@/contexts/ThemeContext";
interface RadioStation {
  id: string;
  name: string;
  description: string;
  streamUrl: string;
  genre: string;
  location: string;
}
const radioStations: RadioStation[] = [
  {
    id: "spandex-salvation",
    name: "Spandex Salvation Radio",
    description: "Old School Metal 24/7",
    streamUrl: "/api/radio-stream",
    genre: "Metal",
    location: "Global"
  }
];
interface RadioStationSelectorProps {
  currentStation: string;
  onStationChange: (station: RadioStation) => void;
}
export default function RadioStationSelector({ currentStation, onStationChange }: RadioStationSelectorProps) {
  const { getColors } = useTheme();
  const colors = getColors();
  
  const selectedStation = radioStations.find(station => station.id === currentStation) || radioStations[0];
  return (
    <div className="w-28 sm:w-36 mx-auto mb-4">
      <DropdownMenu>
        <DropdownMenuTrigger asChild>
          <Button
            variant="outline"
            className="w-full justify-between text-left font-normal border-2 transition-all duration-300 hover:scale-105"
            style={{
              borderColor: colors.primary,
              backgroundColor: 'hsl(var(--background))',
              color: 'hsl(var(--foreground))'
            }}
          >
            <div className="flex items-center space-x-3">
              <Radio className="h-4 w-4" style={{ color: colors.primary }} />
              <div className="flex flex-col">
                <span className="font-semibold text-sm">Spandex Salvation Radio</span>
                <span className="text-xs text-muted-foreground">Old School Metal 24/7</span>
              </div>
            </div>
            <ChevronDown className="h-4 w-4 opacity-50" />
          </Button>
        </DropdownMenuTrigger>
        <DropdownMenuContent 
          className="w-80 p-2"
          style={{
            backgroundColor: 'hsl(var(--background))',
            border: `1px solid ${colors.primary}`,
            borderRadius: '8px'
          }}
        >
          <DropdownMenuItem
            onClick={() => onStationChange(radioStations[0])}
            className="p-3 cursor-pointer rounded-md transition-all duration-200 focus:outline-none"
            style={{
              backgroundColor: `${colors.primary}20`
            }}
            onMouseEnter={(e) => {
              e.currentTarget.style.backgroundColor = `${colors.primary}20`;
            }}
            onMouseLeave={(e) => {
              e.currentTarget.style.backgroundColor = `${colors.primary}20`;
            }}
          >
            <div className="flex items-center space-x-3 w-full">
              <Radio 
                className="h-4 w-4 flex-shrink-0" 
                style={{ color: colors.primary }} 
              />
              <div className="flex-1 min-w-0">
                <div className="flex items-center justify-between">
                  <span className="font-semibold text-sm text-foreground truncate">
                    Spandex Salvation Radio
                  </span>
                  <span 
                    className="text-xs px-2 py-1 rounded-full ml-2 flex-shrink-0"
                    style={{
                      backgroundColor: `${colors.primary}30`,
                      color: colors.primary
                    }}
                  >
                    Metal
                  </span>
                </div>
                <div className="text-xs text-muted-foreground mt-1">
                  Old School Metal 24/7 â€¢ Global
                </div>
              </div>
            </div>
          </DropdownMenuItem>
        </DropdownMenuContent>
      </DropdownMenu>
    </div>
  );
}
This shows how the component works with just one station:

UI Structure: The button displays "Spandex Salvation Radio" with the description "Old School Metal 24/7"
Dropdown: When clicked, it shows the single station option with a Radio icon, name, genre badge ("Metal"), and description
Theming: Uses the theme colors for borders, text, and hover effects
Functionality: When the station is clicked in the dropdown, it calls onStationChange() with the station object
Styling: The dropdown item has a highlighted background since it's the current/selected station
The component is responsive (different widths on mobile vs desktop) and includes hover effects that change the background color based on the current theme.