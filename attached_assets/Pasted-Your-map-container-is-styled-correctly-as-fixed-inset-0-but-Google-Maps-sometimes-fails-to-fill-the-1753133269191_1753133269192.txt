Your map container is styled correctly as fixed inset-0, but Google Maps sometimes fails to fill the div if you don't explicitly call google.maps.event.trigger(map, "resize") after the container is visually fullscreen, and if the parent/container CSS isn't 100% solid for full viewport coverage.

1. Container Div Sizing
You use this for fullscreen:

jsx
Copy
Edit
isFullscreen 
  ? "fixed inset-0 z-[9999] mb-0 bg-black overflow-hidden pt-16"
  : "h-[600px] rounded-lg overflow-hidden"
But the inner div (mapRef) uses:

jsx
Copy
Edit
className={`map-container w-full transition-all duration-300 ${
  isFullscreen ? "h-full opacity-100" : "h-[600px] rounded-lg opacity-100"
}`}
Issue:

h-full here means "fill the parent height" — but if the parent’s height is not explicitly set (100vh or 100%), the map won’t fill the screen.

Tailwind's fixed inset-0 gives your parent the full viewport size, but only if the parent has no padding/margin/extra elements and the height is not modified elsewhere (e.g. your fullscreen header).

Quick check:

If your fullscreen header is pt-16 (padding-top: 4rem), your map will be 4rem lower than the top edge. But the inner map div doesn't account for that — so it may be hiding under the header, or not filling the space fully.

2. Triggering Map Resize
You are calling:

js
Copy
Edit
window.google.maps.event.trigger(map, 'resize');
…which is correct.
BUT:

Sometimes, you need to delay this call until after the DOM/CSS transition is truly complete, especially if there are animated transitions (like transition-all duration-300).

Also, call map.setCenter(...) after resize, as you already do, but maybe the timing needs more buffer.

3. Potential Z-Index/Overflow Issues
Your z-[9999] is very high — make sure nothing else is visually overlapping (e.g., a parent modal, another fixed div).

4. Viewport/Body CSS
You’re adding overflow: hidden to the body, but you’re not adjusting body or html height. If your parent containers up the tree (like a main wrapper or html/body) don’t have height: 100%, a fixed child can sometimes behave unexpectedly on certain browsers.

How to Fix It — Step by Step
1. Ensure Outer Container is 100% Height
Just above your map div, in fullscreen, the parent should have:

jsx
Copy
Edit
className="fixed inset-0 z-[9999] bg-black overflow-hidden"
style={{ height: '100vh', width: '100vw' }}
Or if you want to keep pt-16 for the header, then the inner map container needs to be:

jsx
Copy
Edit
className="map-container w-full"
style={{ height: 'calc(100vh - 4rem)' }} // 4rem = 64px = pt-16
This is CRUCIAL!
If you use h-full but the parent isn’t 100vh, the map will NOT fill the viewport.

2. Make Sure google.maps.event.trigger(map, "resize") Runs AFTER CSS Transition
Give a slightly longer timeout (e.g., 400ms, not 150ms) to guarantee the CSS is finished.

js
Copy
Edit
setTimeout(() => {
  if (map && window.google && window.google.maps) {
    window.google.maps.event.trigger(map, "resize");
    // recenter after
    setTimeout(() => {
      if (userLocation) {
        map.panTo(userLocation);
      } else {
        map.panTo({ lat: 20, lng: 0 });
      }
    }, 50);
  }
}, 400); // Give plenty of time for the fullscreen transition!
3. Inner Map Div Should Explicitly Use 100% Height (or calc)
jsx
Copy
Edit
<div
  ref={mapRef}
  className="map-container w-full"
  style={isFullscreen
    ? { height: 'calc(100vh - 4rem)' } // adjust for header!
    : { height: '600px', borderRadius: '0.75rem' }
  }
/>
Or if you want map under the header:
Don’t use pt-16 on the parent, use it inside the header section, and let the map go all the way up.

Summary
Your bug is almost always because the inner map div is not truly 100% the viewport when fullscreen.

Use height: calc(100vh - HEADER_HEIGHT) if you have a header.

Double check for all parents in the React tree in fullscreen to have zero padding/margin and to stretch edge to edge.

The Google Map canvas will only render at the dimensions of the containing div — it won’t "auto-resize" to fill the browser unless you explicitly make its parent (and itself) the full height.

Try This Minimal Example
This always works for fullscreen Google Maps, regardless of framework:

jsx
Copy
Edit
<div style={{
  position: isFullscreen ? 'fixed' : 'relative',
  inset: 0,
  top: isFullscreen ? '4rem' : undefined, // if header is 4rem tall
  height: isFullscreen ? 'calc(100vh - 4rem)' : 600,
  width: '100vw',
  zIndex: 9999,
  background: 'black',
  overflow: 'hidden'
}}>
  <div
    ref={mapRef}
    style={{
      height: '100%',
      width: '100%',
    }}
  />
</div>
And then:

js
Copy
Edit
setTimeout(() => {
  if (map && window.google && window.google.maps) {
    window.google.maps.event.trigger(map, "resize");
    map.panTo(userLocation || {lat: 20, lng: 0});
  }
}, 400);
In summary:
Parent container must have explicit height (100vh/calc).

Map container must be 100% height.

Resize event should be delayed until CSS transition completes.

Check if your header/padding pushes the map down, and adjust calc(100vh - Xpx).

If you try those changes and the map still doesn’t go fullscreen, let me know your exact Tailwind/CSS class structure for that section and I can give you an exact working snippet. This problem comes up ALL THE TIME with maps and modals — and it’s almost always the div heights, not the map code itself!

